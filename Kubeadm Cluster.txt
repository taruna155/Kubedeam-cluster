#### On each node (vm's) into the cluster
 KUBERNETES_VERSION=v1.32

 CRIO_VERSION=v1.32

 apt-get update

 apt-get install -y software-properties-common curl

 curl -fsSL https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/Release.key |     gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
 
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/ /" |     tee /etc/apt/sources.list.d/kubernetes.list
 
curl -fsSL https://download.opensuse.org/repositories/isv:/cri-o:/stable:/$CRIO_VERSION/deb/Release.key |     gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
 
echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://download.opensuse.org/repositories/isv:/cri-o:/stable:/$CRIO_VERSION/deb/ /" |     tee /etc/apt/sources.list.d/cri-o.list
 
apt-get update
 
apt-get install -y cri-o kubelet kubeadm kubectl
 
 kubeadm version
 kubectl version
 kubelet --version
 crio version
 systemctl status crio.service
 systemctl start crio.service
 systemctl status crio.service

 swapoff -a
 modprobe br_netfilter
 sysctl -w net.ipv4.ip_forward=1

### On Master Nodes
 kubeadm init --ignore-preflight-errors=all

mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config 
chown $(id -u):$(id -g) $HOME/.kube/config

 
 kubectl get nodes -o wide


 kubectl apply -f https://reweave.azurewebsites.net/k8s/v1.29/net.yaml


 kubectl get pods -A -o wide

 kubectl get nodes

 kubectl run pod-1 --image nginx

 kubectl get po
